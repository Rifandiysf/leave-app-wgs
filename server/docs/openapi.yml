openapi: 3.0.0
info:
  title: Leave Application API
  description: API documentation for the WGS Leave Application server.
  version: 1.0.0
servers:
  - url: /api/v1
    description: Development server
tags:
  - name: Auth
    description: Authentication operations
  - name: Admin
    description: Operations available to administrators
  - name: Super Admin
    description: Operations available only to super administrators
  - name: User
    description: Operations available to standard users (karyawan)
paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginSuccessResponse'
        '400':
          description: Validation error (e.g., email not valid, password empty)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/logout:
    get:
      tags:
        - Auth
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Logout successful
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get all users (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Number of items per page
        - in: query
          name: search
          schema:
            type: string
          description: Search query for user name or NIK
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - User
      summary: Deactivate user account (self)
      description: Allows a user to deactivate their own account.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deactivated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{nik}:
    get:
      tags:
        - User
      summary: Get user details by NIK
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nik
          required: true
          schema:
            type: string
          description: User's NIK
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_users'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - User
      summary: Update user details (self)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nik
          required: true
          schema:
            type: string
          description: User's NIK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_users'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Admin
        - Super Admin
      summary: Deactivate a user by NIK (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nik
          required: true
          schema:
            type: string
          description: NIK of the user to deactivate
      responses:
        '200':
          description: User deactivated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{nik}/balance:
    patch:
      tags:
        - Admin
        - Super Admin
      summary: Adjust user's leave balance (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nik
          required: true
          schema:
            type: string
          description: User's NIK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdjustBalanceRequest'
      responses:
        '200':
          description: Balance adjusted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{nik}/leave-trend:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get leave trend for a specific user (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nik
          required: true
          schema:
            type: string
          description: User's NIK
      responses:
        '200':
          description: Leave trend data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    month:
                      type: string
                    total:
                      type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{nik}/history:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get leave history for a specific user (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nik
          required: true
          schema:
            type: string
          description: User's NIK
      responses:
        '200':
          description: User's leave history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '500':
          description: Internal server error
  /users/me:
    get:
      tags:
        - User
      summary: Get current user's details
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_users'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /users/special:
    get:
      tags:
        - User
      summary: Get available special leaves for the user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available special leaves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_special_leave'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /users/mandatory:
    get:
      tags:
        - User
      summary: Get available mandatory leaves for the user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of available mandatory leaves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_mandatory_leave'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /users/leave:
    post:
      tags:
        - User
      summary: Create a new leave request
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeaveRequest'
      responses:
        '201':
          description: Leave request created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_leave'
        '400':
          description: Validation error or business logic error (e.g., insufficient balance, duplicate leave)
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    get:
      tags:
        - User
      summary: Get user's own leave requests
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of the user's leave requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveListResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /users/leave/search:
    get:
      tags:
        - User
      summary: Search within the user's own leave requests
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search by leave title
      responses:
        '200':
          description: A list of matching leave requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveListResponse'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /users/leave/{id}:
    get:
      tags:
        - User
      summary: Get a specific leave request by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The leave request object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_leave'
        '401':
          description: Unauthorized
        '404':
          description: Leave request not found
        '500':
          description: Internal server error
  /leaves:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get all leave requests (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: A list of all leave requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/search:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Search all leave requests (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search by user name, NIK, or leave title
      responses:
        '200':
          description: A list of matching leave requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaveListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/logs:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get all leave status change logs (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of leave logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_leave_log'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/logs/search:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Search leave status change logs (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: A list of matching leave logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_leave_log'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/special:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get all special leaves (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all special leaves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_special_leave'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      tags:
        - Admin
        - Super Admin
      summary: Create a new special leave type (Admin/Super Admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpecialLeaveRequest'
      responses:
        '201':
          description: Special leave created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_special_leave'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/special/search:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Search for special leaves (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search by title
      responses:
        '200':
          description: A list of matching special leaves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_special_leave'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/special/{id}:
    patch:
      tags:
        - Admin
        - Super Admin
      summary: Update a special leave type (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpecialLeaveRequest'
      responses:
        '200':
          description: Special leave updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_special_leave'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Special leave not found
        '500':
          description: Internal server error
  /leaves/mandatory:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get all mandatory leaves (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all mandatory leaves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_mandatory_leave'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    post:
      tags:
        - Admin
        - Super Admin
      summary: Create a new mandatory leave (Admin/Super Admin)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMandatoryLeaveRequest'
      responses:
        '201':
          description: Mandatory leave created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_mandatory_leave'
        '400':
          description: Validation error (e.g., start date not two weeks ahead)
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/mandatory/search:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Search for mandatory leaves (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search by title
      responses:
        '200':
          description: A list of matching mandatory leaves
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_mandatory_leave'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/mandatory/{id}:
    patch:
      tags:
        - Admin
        - Super Admin
      summary: Update a mandatory leave (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMandatoryLeaveRequest'
      responses:
        '200':
          description: Mandatory leave updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_mandatory_leave'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Mandatory leave not found
        '500':
          description: Internal server error
  /leaves/mandatory-year/{year}:
    patch:
      tags:
        - Admin
        - Super Admin
      summary: Update mandatory leave year settings (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: year
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success message
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /leaves/{id}:
    patch:
      tags:
        - Admin
        - Super Admin
      summary: Update a leave request status (Admin/Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeaveStatusRequest'
      responses:
        '200':
          description: Leave status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_leave'
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Leave request not found
        '500':
          description: Internal server error
  /uploads/import:
    post:
      tags:
        - Super Admin
      summary: Import users from a file (Super Admin)
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: File imported successfully
        '400':
          description: No file uploaded or invalid file format
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /uploads/balance-adjustment:
    post:
      tags:
        - Admin
        - Super Admin
      summary: Import balance adjustments from a file (Admin/Super Admin)
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: File imported successfully
        '400':
          description: No file uploaded or invalid file format
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /uploads/export:
    get:
      tags:
        - Super Admin
      summary: Export user data to a file (Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Excel file of users
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /dashboard/statistics:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get dashboard statistics (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard statistics
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /dashboard/trend:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get dashboard leave trend (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard trend data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /dashboard/leaderboard:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get dashboard leave leaderboard (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard leaderboard data
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /dashboard/pending-leave:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get pending leave requests for the dashboard (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of pending leaves
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /balances/logs:
    get:
      tags:
        - Admin
        - Super Admin
      summary: Get all balance adjustment logs (Admin/Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of balance adjustment logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_balance_adjustment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /balances/me:
    get:
      tags:
        - User
      summary: Get current user's balance adjustment logs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of the user's balance adjustment logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/tb_balance_adjustment'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /setting:
    post:
      tags:
        - Super Admin
      summary: Create application settings (Super Admin)
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/tb_settings'
      responses:
        '201':
          description: Settings created successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
    get:
      tags:
        - Super Admin
      summary: Get application settings (Super Admin)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Application settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/tb_settings'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /setting/{id}:
    patch:
      tags:
        - Super Admin
      summary: Update application settings (Super Admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/tb_settings'
      responses:
        '200':
          description: Settings updated successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Setting not found
        '500':
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    tb_roles:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          maxLength: 50
        description:
          type: string
    tb_statuses:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          maxLength: 50
    tb_balance:
      type: object
      properties:
        id_balance:
          type: string
          maxLength: 50
        amount:
          type: integer
          format: int32
        receive_date:
          type: string
          format: date-time
        expired_date:
          type: string
          format: date-time
        NIK:
          type: string
          maxLength: 16
        created_at:
          type: string
          format: date-time
    tb_leave:
      type: object
      properties:
        id_leave:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 255
        leave_type:
          $ref: '#/components/schemas/leave_type'
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        total_days:
          type: integer
          format: int32
        reason:
          type: string
        status:
          $ref: '#/components/schemas/status'
        created_at:
          type: string
          format: date-time
        NIK:
          type: string
          maxLength: 50
        id_special:
          type: string
          maxLength: 50
        id_mandatory:
          type: string
          maxLength: 50
    tb_mandatory_leave:
      type: object
      properties:
        id_mandatory:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        description:
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    tb_special_leave:
      type: object
      properties:
        id_special:
          type: string
          maxLength: 50
        title:
          type: string
          maxLength: 255
        applicable_gender:
          $ref: '#/components/schemas/applicable_gender'
        duration:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/special_leave_type'
        is_active:
          type: boolean
        description:
          type: string
        created_at:
          type: string
          format: date-time
    tb_users:
      type: object
      properties:
        NIK:
          type: string
          maxLength: 16
        fullname:
          type: string
          maxLength: 50
        email:
          type: string
          maxLength: 50
        password:
          type: string
          maxLength: 20
        isMale:
          type: boolean
        join_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        isActive:
          type: boolean
        role_id:
          type: integer
          format: int32
        status_id:
          type: integer
          format: int32
    tb_balance_adjustment:
      type: object
      properties:
        id_adjustment:
          type: string
          maxLength: 50
        NIK:
          type: string
          maxLength: 16
        adjustment_value:
          type: integer
          format: int32
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        actor:
          type: string
          maxLength: 50
        balance_year:
          type: integer
          format: int32
        id_balance:
          type: string
    tb_leave_log:
      type: object
      properties:
        id_log:
          type: string
          maxLength: 50
        old_status:
          $ref: '#/components/schemas/status'
        new_status:
          $ref: '#/components/schemas/status'
        reason:
          type: string
        changed_at:
          type: string
          format: date-time
        changed_by_nik:
          type: string
          maxLength: 16
        actor_fullname:
          type: string
          maxLength: 50
        id_leave:
          type: string
          maxLength: 50
        balances_used:
          type: object
    tb_jwt_token:
      type: object
      properties:
        access_token:
          type: string
          maxLength: 500
        NIK:
          type: string
          maxLength: 16
        device_id:
          type: string
          maxLength: 255
        device_info:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
    tb_settings:
      type: object
      properties:
        id:
          type: string
        light_image:
          type: string
        light_background:
          type: string
        light_foreground:
          type: string
        light_card:
          type: string
        light_cardForeground:
          type: string
        light_primary:
          type: string
        light_primaryForeground:
          type: string
        light_secondary:
          type: string
        light_secondaryForeground:
          type: string
        dark_image:
          type: string
        dark_background:
          type: string
        dark_foreground:
          type: string
        dark_card:
          type: string
        dark_cardForeground:
          type: string
        dark_primary:
          type: string
        dark_primaryForeground:
          type: string
        dark_secondary:
          type: string
        dark_secondaryForeground:
          type: string
        created_at:
          type: string
          format: date-time
    applicable_gender:
      type: string
      enum:
        - m
        - f
        - mf
    leave_type:
      type: string
      enum:
        - personal_leave
        - mandatory_leave
        - special_leave
    status:
      type: string
      enum:
        - pending
        - approved
        - rejected
        - expired
    special_leave_type:
      type: string
      enum:
        - day
        - month
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    LoginSuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Login successful
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/tb_users'
            token:
              type: string
    CreateLeaveRequest:
      type: object
      properties:
        title:
          type: string
        leave_type:
          $ref: '#/components/schemas/leave_type'
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        reason:
          type: string
        id_special:
          type: string
          format: uuid
        id_mandatory:
          type: string
          format: uuid
    UpdateLeaveStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/status'
        reason:
          type: string
          description: Required when status is 'rejected'
    CreateSpecialLeaveRequest:
      type: object
      properties:
        title:
          type: string
        applicable_gender:
          $ref: '#/components/schemas/applicable_gender'
        duration:
          type: integer
        type:
          $ref: '#/components/schemas/special_leave_type'
        description:
          type: string
    UpdateSpecialLeaveRequest:
      type: object
      properties:
        title:
          type: string
        applicable_gender:
          $ref: '#/components/schemas/applicable_gender'
        duration:
          type: integer
        type:
          $ref: '#/components/schemas/special_leave_type'
        description:
          type: string
        is_active:
          type: boolean
    CreateMandatoryLeaveRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    UpdateMandatoryLeaveRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        is_active:
          type: boolean
    UpdateUserRequest:
      type: object
      properties:
        fullname:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        isMale:
          type: boolean
    AdjustBalanceRequest:
      type: object
      properties:
        amount:
          type: integer
        notes:
          type: string
    UserListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Users retrieved successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/tb_users'
        pagination:
          $ref: '#/components/schemas/Pagination'
    LeaveListResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Leaves retrieved successfully
        data:
          type: array
          items:
            $ref: '#/components/schemas/tb_leave'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer
    ErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: fail
        message:
          type: string
    ValidationErrorResponse:
      type: object
      properties:
        status:
          type: string
          example: fail
        message:
          type: string
          example: Validation failed
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string