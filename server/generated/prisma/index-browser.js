
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Tb_balanceScalarFieldEnum = {
  id_balance: 'id_balance',
  amount: 'amount',
  receive_date: 'receive_date',
  expired_date: 'expired_date',
  NIK: 'NIK'
};

exports.Prisma.Tb_leaveScalarFieldEnum = {
  id_leave: 'id_leave',
  title: 'title',
  leave_type: 'leave_type',
  start_date: 'start_date',
  end_date: 'end_date',
  total_days: 'total_days',
  reason: 'reason',
  status: 'status',
  created_at: 'created_at',
  NIK: 'NIK',
  id_special: 'id_special',
  id_mandatory: 'id_mandatory'
};

exports.Prisma.Tb_mandatory_leaveScalarFieldEnum = {
  id_mandatory: 'id_mandatory',
  title: 'title',
  duration: 'duration',
  is_active: 'is_active',
  description: 'description'
};

exports.Prisma.Tb_special_leaveScalarFieldEnum = {
  id_special: 'id_special',
  title: 'title',
  applicable_gender: 'applicable_gender',
  duration: 'duration',
  is_active: 'is_active',
  description: 'description'
};

exports.Prisma.Tb_usersScalarFieldEnum = {
  NIK: 'NIK',
  fullname: 'fullname',
  email: 'email',
  password: 'password',
  gender: 'gender',
  role: 'role',
  status_active: 'status_active',
  join_date: 'join_date'
};

exports.Prisma.Tb_balance_adjustmentScalarFieldEnum = {
  id_adjustment: 'id_adjustment',
  adjustment_value: 'adjustment_value',
  notes: 'notes',
  created_at: 'created_at',
  actor: 'actor',
  NIK: 'NIK'
};

exports.Prisma.Tb_leave_logScalarFieldEnum = {
  id_log: 'id_log',
  old_status: 'old_status',
  new_status: 'new_status',
  reason: 'reason',
  changed_at: 'changed_at',
  changed_by_nik: 'changed_by_nik',
  id_leave: 'id_leave'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.leave_type = exports.$Enums.leave_type = {
  personal_leave: 'personal_leave',
  mandatory_leave: 'mandatory_leave',
  special_leave: 'special_leave'
};

exports.status = exports.$Enums.status = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.applicable_gender = exports.$Enums.applicable_gender = {
  m: 'm',
  f: 'f',
  mf: 'mf'
};

exports.gender = exports.$Enums.gender = {
  male: 'male',
  female: 'female'
};

exports.role = exports.$Enums.role = {
  karyawan_tetap: 'karyawan_tetap',
  karyawan_kontrak: 'karyawan_kontrak',
  magang: 'magang',
  admin: 'admin',
  super_admin: 'super_admin'
};

exports.status_active = exports.$Enums.status_active = {
  active: 'active',
  resign: 'resign'
};

exports.Prisma.ModelName = {
  tb_balance: 'tb_balance',
  tb_leave: 'tb_leave',
  tb_mandatory_leave: 'tb_mandatory_leave',
  tb_special_leave: 'tb_special_leave',
  tb_users: 'tb_users',
  tb_balance_adjustment: 'tb_balance_adjustment',
  tb_leave_log: 'tb_leave_log'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
